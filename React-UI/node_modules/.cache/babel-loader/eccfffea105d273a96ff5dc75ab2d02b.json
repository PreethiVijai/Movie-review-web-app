{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrut\\\\webapp\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\nimport \"./counter.css\";\nimport logo from \"./cine.png\";\nimport search from \"./searchicon.jpg\";\nimport Autosuggest from \"react-autosuggest\";\nconst languages = [{\n  name: \"C\",\n  year: 1972\n}, {\n  name: \"Elm\",\n  year: 2012\n}];\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : languages.filter(lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue);\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, suggestion.name);\n\nclass Counter extends Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      suggestions: []\n    };\n  }\n\n  render() {\n    let videoid = \"vi2308751129\";\n    let link = `https://www.imdb.com/videoembed/${videoid}`;\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: \"Enter movie name\",\n      value,\n      onChange: this.onChange\n    };\n\n    function myFunction() {\n      console.log(\"Hello!\");\n    }\n\n    function sayHello() {\n      alert(\"Hello 123!\");\n    }\n\n    return React.createElement(\"div\", {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"logoheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: logo,\n      width: \"50\",\n      height: \"50\",\n      backgroundColor: \"transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"CINEPHILE\")), React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"all_details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"moviereview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"trailer\",\n      style: {\n        backgroundColor: \"#cde\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"iframe\", {\n      src: link,\n      width: \"550\",\n      height: \"260\",\n      allowfullscreen: \"true\",\n      mozallowfullscreen: \"true\",\n      webkitallowfullscreen: \"true\",\n      frameborder: \"no\",\n      scrolling: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"tomatometer\",\n      style: {\n        backgroundColor: \"#abc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Tomatometer here\"), React.createElement(\"div\", {\n      id: \"cast\",\n      style: {\n        backgroundColor: \"#cdc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Cast details\")), React.createElement(\"div\", {\n      id: \"twitterfeed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"NEWS\"), React.createElement(\"div\", {\n      id: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" Twitter Feed\")), React.createElement(\"div\", {\n      id: \"screen_location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"LOCATION\"), React.createElement(\"div\", {\n      id: \"maps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" Maps\"))));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/shrut/webapp/src/components/counter.jsx"],"names":["React","Component","logo","search","Autosuggest","languages","name","year","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","getSuggestionValue","suggestion","renderSuggestion","Counter","constructor","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","render","videoid","link","inputProps","placeholder","myFunction","console","log","sayHello","alert","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADgB,EAKhB;AACED,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALgB,CAAlB;;AAUA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,QAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,SAAOD,WAAW,KAAK,CAAhB,GACH,EADG,GAEHR,SAAS,CAACU,MAAV,CACEC,IAAI,IAAIA,IAAI,CAACV,IAAL,CAAUM,WAAV,GAAwBK,KAAxB,CAA8B,CAA9B,EAAiCJ,WAAjC,MAAkDH,UAD5D,CAFJ;AAKD,CATD;;AAUA,MAAMQ,kBAAkB,GAAGC,UAAU,IAAIA,UAAU,CAACb,IAApD;;AACA,MAAMc,gBAAgB,GAAGD,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,UAAU,CAACb,IAAjB,CAAvC;;AACA,MAAMe,OAAN,SAAsBpB,SAAtB,CAAgC;AAC9BqB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,QARc,GAQH,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAClC,WAAKC,QAAL,CAAc;AACZjB,QAAAA,KAAK,EAAEgB;AADK,OAAd;AAGD,KAZa;;AAAA,SAcdE,2BAdc,GAcgB,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAe;AAC3C,WAAKiB,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAEpB,cAAc,CAACC,KAAD;AADf,OAAd;AAGD,KAlBa;;AAAA,SAoBdoB,2BApBc,GAoBgB,MAAM;AAClC,WAAKH,QAAL,CAAc;AACZE,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAxBa;;AAEZ,SAAKE,KAAL,GAAa;AACXrB,MAAAA,KAAK,EAAE,EADI;AAEXmB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAmBDG,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,cAAd;AACA,QAAIC,IAAI,GAAI,mCAAkCD,OAAQ,EAAtD;AACA,UAAM;AAAEvB,MAAAA,KAAF;AAASmB,MAAAA;AAAT,QAAyB,KAAKE,KAApC;AACA,UAAMI,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,kBADI;AAEjB1B,MAAAA,KAFiB;AAGjBc,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;;AAKA,aAASa,UAAT,GAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AACD,aAASC,QAAT,GAAoB;AAClBC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACD;;AACD,WACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,EADN;AAEE,MAAA,GAAG,EAAEtC,IAFP;AAGE,MAAA,KAAK,EAAC,IAHR;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,eAAe,EAAC,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CADF,EAWE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE0B,WADf;AAEE,MAAA,2BAA2B,EAAE,KAAKD,2BAFpC;AAGE,MAAA,2BAA2B,EAAE,KAAKE,2BAHpC;AAIE,MAAA,kBAAkB,EAAEX,kBAJtB;AAKE,MAAA,gBAAgB,EAAEE,gBALpB;AAME,MAAA,UAAU,EAAEc,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,EAsBE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAAEO,QAAAA,eAAe,EAAE;AAAnB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAER,IADP;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,MAAM,EAAC,KAHT;AAIE,MAAA,eAAe,EAAC,MAJlB;AAKE,MAAA,kBAAkB,EAAC,MALrB;AAME,MAAA,qBAAqB,EAAC,MANxB;AAOE,MAAA,WAAW,EAAC,IAPd;AAQE,MAAA,SAAS,EAAC,IARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAaE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAE;AAAnB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF,EAgBE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAE;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,CADF,EAqBE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CArBF,EA0BE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CA1BF,CAtBF,CADF;AAwDD;;AAjG6B;;AAoGhC,eAAepB,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./counter.css\";\r\nimport logo from \"./cine.png\";\r\nimport search from \"./searchicon.jpg\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nconst languages = [\r\n  {\r\n    name: \"C\",\r\n    year: 1972\r\n  },\r\n  {\r\n    name: \"Elm\",\r\n    year: 2012\r\n  }\r\n];\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : languages.filter(\r\n        lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n      );\r\n};\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\nconst renderSuggestion = suggestion => <div>{suggestion.name}</div>;\r\nclass Counter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: []\r\n    };\r\n  }\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n  render() {\r\n    let videoid = \"vi2308751129\";\r\n    let link = `https://www.imdb.com/videoembed/${videoid}`;\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Enter movie name\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n    function myFunction() {\r\n      console.log(\"Hello!\");\r\n    }\r\n    function sayHello() {\r\n      alert(\"Hello 123!\");\r\n    }\r\n    return (\r\n      <div id=\"page\">\r\n        <div class=\"header\">\r\n          <span class=\"logoheader\">\r\n            <img\r\n              alt=\"\"\r\n              src={logo}\r\n              width=\"50\"\r\n              height=\"50\"\r\n              backgroundColor=\"transparent\"\r\n            />\r\n            <text>CINEPHILE</text>\r\n          </span>\r\n          <Autosuggest\r\n            suggestions={suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={getSuggestionValue}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n          />\r\n        </div>\r\n        {/* header div ends here */}\r\n        <div id=\"all_details\">\r\n          <div id=\"moviereview\">\r\n            <div id=\"trailer\" style={{ backgroundColor: \"#cde\" }}>\r\n              <iframe\r\n                src={link}\r\n                width=\"550\"\r\n                height=\"260\"\r\n                allowfullscreen=\"true\"\r\n                mozallowfullscreen=\"true\"\r\n                webkitallowfullscreen=\"true\"\r\n                frameborder=\"no\"\r\n                scrolling=\"no\"\r\n              ></iframe>\r\n            </div>\r\n            <div id=\"tomatometer\" style={{ backgroundColor: \"#abc\" }}>\r\n              Tomatometer here\r\n            </div>\r\n            <div id=\"cast\" style={{ backgroundColor: \"#cdc\" }}>\r\n              Cast details\r\n            </div>\r\n          </div>\r\n          <div id=\"twitterfeed\">\r\n            <div id=\"news\">NEWS</div>\r\n            <div id=\"feed\"> Twitter Feed</div>\r\n          </div>\r\n\r\n          <div id=\"screen_location\">\r\n            <div id=\"location\">LOCATION</div>\r\n            <div id=\"maps\"> Maps</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}